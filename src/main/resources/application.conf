# Focused Reading main configuration

informationExtraction {
  sqlitePath = "/Users/enrique/Research/focused_reading/sqlite/interactions.sqlite"
}

lucene {
  annotationsIndex = "/Users/enrique/Research/focused_reading/pmc_oa_lucene"
}

MDP{
  actions {
    active = [
      "ExploitQuery",
      "ExploreManyQuery",
      "ExploreFewQuery",
      "ExploitEndpoints",
      "ExploreEndpoints"
    ]
  }

  rewardShaping = true
  rewardShapingCoefficient = 1

  paperAmounts = {
    few = 50
    many = 200
  }

  maxIterations = 2
  maxUnchangedIterations = 1
}

training {
  inputFile = "/Users/enrique/Research/focused_reading/fr_training.txt"
  policyFile = "learnt_policy2.json"
  epochs = 30
  maxEpisodes = 10000
  burnInEpisodes = 30
  learningRate = 0.05
  decayParameter = 0.8

  epsilon{
    initial = 0.1
    lowerBound = 0.009
  }

  normalization {
    enabled = true
    lower = 0
    upper = 1
    rangesFile = "ranges_hoy.tsv"
  }

  rangesFile = "ranges_new.tsv"

}

imitation {
  inputFile = "/Users/enrique/Research/focused_reading/fr_training5.txt"

  policyFile = "dagger_classifier.ser"
  epochs = 100
  maxEpisodes = 10000

  initialLearningRate = 1.0

  includedFeatures = ["paRank", "pbQueryLogCount", "pbRank"]


  normalization {
    enabled = false
    lower = 0
    upper = 1
    rangesFile = "ranges_imitation.tsv"
  }

  rangesFile = "ranges_imitation_new.tsv"

}

testing {
  inputFile = "/Users/enrique/Research/focused_reading/fr_testing3.txt"
  policyFile = "learnt_policy_rewardshaping.json"

  normalization {
    enabled = true
    lower = 0
    upper = 1
    rangesFile = "ranges_static.tsv"
  }

  output {
    evidence = "evidence.txt"
    annotations = "to_annotate.txt"
    bootstrap = "rl_bootstrap.txt"
  }
}

baseline {
  inputFile = "/Users/enrique/Research/focused_reading/fr_testing2.txt"
}

expertOracle {
  #inputFile = "/Users/enrique/Research/focused_reading/fr_testing.txt"#"/Users/enrique/Research/focused_reading/fr_training5.txt"
  inputFile = "/Users/enrique/Research/focused_reading/fr_training.txt"
  goldenDataPath = "shortest_paths.ser"
  negativeDataPath = "negative_paths.ser"

  solutionsPath = "/Users/enrique/Research/focused_reading/search_results/solutions_6iter_testing.ser"
  trainingSolutionsPath = "/Users/enrique/Research/focused_reading/search_results/solutions_6iter_training.ser"
  classifierPath = "dagger_classifier.ser"#"policy_classifier.ser"
  includedFeatures = ["paRank", "pbQueryLogCount", "pbRank"]
  classWeights = [0.348642172524,1.24005681818,4.45408163265, 9.92045454545] # Ordered by class-frequency
}